#!/usr/bin/env python

import numpy as np


class LowPassFilter:
    """Low Pass Filter Object

    Fs = 400 Hz                     \n
    F_pass = 20 Hz                  \n
    F_stop = 70 Hz (Strict Cuttoff) \n
    A_pass = 1 dB                   \n
    A_stop = 80 dB                  \n
    Order = 8                       \n
    Sections = 4
    """
    # b0, b1, b2, a0, a1, a2
    sos = np.matrix([    
        [ 1.0, 2.0, 1.0, 1.0, -1.7292114372205698025, 0.86415111489659934829],
        [ 1.0, 2.0, 1.0, 1.0,  -1.536383064683665145, 0.65627530635687325589],
        [ 1.0, 2.0, 1.0, 1.0, -1.4155674518756422575, 0.52603180086919576475],
        [ 1.0, 2.0, 1.0, 1.0, -1.3577833092383331248, 0.46373845050029965931],
    ])
    scaleValues = np.array([
        0.033734919419007386443,
        0.029973060418302045066,
        0.027616087248388425379,
        0.026488785315491598926,
        1.0
    ])
    num_section = 4

    def __init__(self):
        # Internal states [s1, s2, s3, s4]
        self.__prev_1 = np.zeros(self.num_section)
        self.__prev_2 = np.zeros(self.num_section)
        self.__curr = np.zeros(self.num_section)

    def filter(self, x):
        self.__prev_2 = self.__prev_1.copy()
        self.__prev_1 = self.__curr.copy()
        
        _input = x

        # SOS Implementation
        for i in range(self.num_section):
            self.__curr[i] = (_input * self.scaleValues[i]
                              - self.sos[i, 4] * self.__prev_1[i]
                              - self.sos[i, 5] * self.__prev_2[i])
            _input = (self.sos[i, 0] * self.__curr[i]
                      + self.sos[i, 1] * self.__prev_1[i]
                      + self.sos[i, 2] * self.__prev_2[i])

        return _input * self.scaleValues[-1]

class MultiLowPassFilter:
    def __init__(self, size):
        self.size = size
        self.filts = [LowPassFilter() for i in range(size)]

    def filter(self, x):
        return np.array([
            self.filts[i].filter(x[i])
            for i in range(self.size)
        ])


if __name__ == "__main__":
    x = np.array([123, 479, 504, 228, 580, 261, 53, 281, 766, 367, 172, 497, 638, 339, 998, 884, 946, 952, 24, 463, 709, 883, 128, 333, 286, 229, 556, 470, 265, 936, 969, 216, 162, 457, 255, 266, 991, 560, 848, 326, 236, 727, 138, 590, 686, 941, 791, 147, 759, 408, 363, 900, 458, 167, 345, 51, 94, 164, 632, 744, 780, 521, 23, 600, 339, 785, 896, 426, 999, 831, 629, 788, 983, 180, 434, 416, 964, 108, 812, 460, 626, 788, 925, 928, 991, 921, 432, 778, 420, 664, 196, 174, 957, 986, 942, 302, 927, 531, 861, 273, 943, 520, 482, 270, 624, 956, 438, 873, 702, 478, 390, 393, 167, 386, 245, 811, 318, 562, 293, 807, 185, 21, 382, 129, 26, 423, 853, 178, 114, 134, 153, 524, 499, 566, 444, 419, 799, 388, 578, 356, 456, 397, 149, 160, 21, 467, 531, 547, 43, 812, 654, 593, 721, 397, 215, 627, 821, 571, 705, 724, 640, 546, 128, 17, 575, 405, 918, 117, 553, 246, 177, 928, 124, 803, 340, 107, 357, 865, 361, 933, 753, 644, 908, 335, 400, 697, 245, 317, 708, 530, 981, 366, 620, 881, 533, 125, 811, 443, 430, 146, 222, 379, 629, 694, 347, 713, 216, 615, 476, 341, 745, 670, 558, 728, 936, 264, 190, 271, 149, 165, 800, 227, 67, 201, 918, 301, 520, 983, 522, 568, 224, 371, 506, 457, 928, 714, 671, 165, 142, 342, 15, 546, 373, 947, 744, 115, 325, 613, 481, 182, 211, 179, 990, 512, 1000, 230, 996, 816, 170, 795, 377, 505, 190, 672, 777, 141, 32, 566, 695, 751, 687, 498, 441, 924, 329, 540, 566, 349, 966, 498, 882, 492, 714, 380, 887, 745, 868, 249, 933, 25, 784, 155, 74, 856, 543, 520, 142, 67, 209, 345, 572, 834, 949, 547, 893, 803, 144, 410, 176, 517, 26, 783, 638, 531, 134, 274, 967, 518, 499, 286, 321, 927, 816, 832, 928, 764, 712, 12, 376, 939, 512, 377, 582, 78, 424, 754, 556, 147, 195, 946, 774, 779, 549, 692, 418, 709, 664, 54, 790, 291, 111, 885, 582, 625, 117, 237, 993, 855, 911, 669, 782, 913, 198, 717, 214, 710, 732, 445, 866, 773, 195, 430, 77, 173, 585, 328, 826, 743, 8, 769, 160, 585, 986, 10, 431, 450, 72, 490, 88, 730, 333, 457, 476, 477, 378, 1000, 650, 60, 181, 383, 506, 896, 285, 579, 993, 934, 542, 734, 908, 932, 281, 737, 392, 783, 22, 85, 243, 281, 281, 328, 699, 316, 898, 611, 206, 948, 576, 142, 327, 353, 572, 694, 459, 296, 758, 985, 452, 213, 659, 161, 703, 578, 285, 35, 246, 657, 253, 468, 814, 312, 185, 560, 221, 196, 312, 653, 374, 826, 485, 869, 609, 846, 37, 436, 894, 303, 338, 500, 303, 190, 639, 647, 31, 588, 659, 71, 883, 709, 510, 819, 57, 265, 240, 792, 194, 852, 1000, 562, 373, 995, 639, 451, 745, 248, 813, 461, 739, 549, 568, 889, 217, 613, 219, 765, 731, 677, 467, 254, 207, 560, 773, 570, 508, 936, 437, 757, 414, 778, 408, 352, 889, 51, 485, 810, 445, 545, 468, 125, 251, 446, 189, 647, 233, 139, 52, 773, 708, 618, 544, 33, 572, 960, 830, 393, 812, 911, 811, 323, 658, 110, 828, 572, 274, 96, 225, 138, 188, 153, 278, 672, 107, 494, 63, 535, 550, 836, 457, 655, 976, 722, 647, 44, 598, 492, 183, 894, 154, 460, 951, 593, 253, 771, 913, 403, 932, 673, 931, 730, 592, 111, 786, 614, 353, 624, 475, 626, 642, 888, 75, 649, 620, 431, 208, 641, 56, 719, 691, 62, 626, 783, 451, 159, 925, 952, 387, 871, 739, 962, 835, 402, 506, 647, 774, 914, 704, 624, 969, 79, 196, 753, 531, 903, 485, 977, 227, 716, 614, 515, 671, 921, 166, 233, 785, 272, 720, 582, 894, 614, 835, 765, 290, 769, 202, 868, 603, 434, 345, 54, 319, 304, 772, 969, 101, 955, 879, 562, 147, 724, 96, 525, 19, 123, 99, 145, 323, 802, 975, 368, 912, 641, 87, 524, 128, 49, 223, 215, 572, 432, 220, 486, 283, 481, 685, 199, 160, 876, 648, 578, 575, 379, 764, 56, 383, 578, 693, 569, 412, 289, 720, 790, 879, 669, 315, 369, 452, 915, 688, 790, 667, 58, 65, 207, 518, 89, 589, 652, 361, 667, 428, 846, 16, 751, 820, 112, 961, 420, 537, 467, 281, 745, 47, 518, 165, 822, 767, 154, 850, 292, 724, 504, 743, 199, 811, 849, 156, 696, 624, 1, 496, 415, 55, 569, 867, 956, 525, 782, 38, 138, 29, 813, 326, 910, 925, 943, 454, 193, 139, 481, 65, 867, 164, 402, 708, 407, 756, 859, 839, 677, 521, 953, 745, 723, 126, 589, 217, 35, 999, 378, 960, 424, 165, 262, 313, 195, 117, 947, 441, 997, 415, 513, 152, 454, 963, 25, 2, 532, 788, 244, 917, 579, 841, 5, 651, 260, 730, 340, 149, 361, 13, 9, 389, 887, 943, 331, 384, 488, 616, 114, 308, 796, 474, 256, 556, 964, 163, 570, 701, 692, 870, 32, 61, 526, 365, 535, 702, 339, 977, 650, 946, 640, 58, 426, 473, 956, 572, 37, 804, 337, 311, 521, 582, 641, 553, 24, 438, 221, 694, 647, 420, 889, 575, 250, 439, 401, 495, 409, 862, 909, 677, 384, 872, 178, 106, 146, 329, 817, 661, 238, 705, 767, 538, 157, 238, 193, 779, 971, 359, 874, 159, 816, 289, 52, 189, 676, 674, 583, 133, 691, 19, 112, 951, 256, 954, 508, 439, 247, 868, 390, 91, 332, 777, 828, 56, 306, 822, 521, 736, 415, 234, 146, 279, 282, 419, 32, 427, 54, 938, 944, 572, 771, 291, 94, 872, 350, 663, 360, 165, 613, 82, 948, 626, 280, 500, 700, 794, 511, 87, 672, 305, 952, 542, 141, 914, 58, 313, 229, 867, 872, 863, 235, 360, 502, 548, 481, 837, 199, 137, 34, 784, 794, 654, 693, 43, 935, 599, 140, 768, 616, 578, 507]) * 1e-3
    n = len(x)

    filt = LowPassFilter()
    y = np.zeros(n)
    for i in range(n):
        y[i] = filt.filter(x[i])
        
    print(y)